version: '3.8'

# Reusable templates for MCP services
x-mcp-service: &mcp-service
  networks:
    - mcp-network
  environment:
    - MCP_PORT

x-mcp-build: &mcp-build
  dockerfile: Dockerfile

services:
  # HomeAssistant MCP (Python stdio -> HTTP proxy)
  mcp-homeassistant:
    <<: *mcp-service
    build:
      <<: *mcp-build
      context: ./services/mcp-homeassistant
    environment:
      - HASS_URL=${HASS_URL}
      - HASS_TOKEN=${HASS_TOKEN}
      - MCP_COMMAND=python -m hass_mcp
      - MCP_PORT=3001
      - SERVICE_NAME=HomeAssistant MCP
    ports:
      - "3001:3001"

  # YNAB MCP (Python stdio -> HTTP proxy)
  mcp-ynab:
    <<: *mcp-service
    build:
      <<: *mcp-build
      context: ./services/mcp-ynab
    environment:
      - YNAB_TOKEN=${YNAB_TOKEN}
      - MCP_COMMAND=uv run ynab-mcp
      - MCP_PORT=3002
      - SERVICE_NAME=YNAB MCP
    ports:
      - "3002:3002"

  # Notion MCP (Python stdio -> HTTP proxy)
  mcp-notion:
    <<: *mcp-service
    build:
      <<: *mcp-build
      context: ./services/mcp-notion
    environment:
      - NOTION_TOKEN=${NOTION_TOKEN}
      - MCP_PORT=3003
    ports:
      - "3003:3003"

  # Fetch MCP (Node.js stdio -> HTTP proxy)
  mcp-fetch:
    <<: *mcp-service
    build:
      <<: *mcp-build
      context: ./services/mcp-fetch
    environment:
      - MCP_PORT=3004
    ports:
      - "3004:3004"

  # Web Search MCP (Python stdio -> HTTP proxy)
  mcp-search:
    <<: *mcp-service
    build:
      <<: *mcp-build
      context: ./services/mcp-search
    environment:
      - SEARCH_API_KEY=${SEARCH_API_KEY}
      - MCP_PORT=3005
    ports:
      - "3005:3005"

  # Calculator MCP (Python stdio -> HTTP proxy)
  mcp-calculator:
    <<: *mcp-service
    build:
      <<: *mcp-build
      context: ./services/mcp-calculator
    environment:
      - MCP_COMMAND=uvx mcp-server-calculator
      - MCP_PORT=3006
      - SERVICE_NAME=Calculator MCP
    ports:
      - "3006:3006"

  # Memory MCP (Node.js stdio -> HTTP proxy)
  mcp-memory:
    <<: *mcp-service
    build:
      <<: *mcp-build
      context: ./services/mcp-memory
    environment:
      - MCP_PORT=3007
    ports:
      - "3007:3007"

  # FastMCP Aggregator (combines all MCPs)
  mcp-aggregator:
    build:
      context: ./services/mcp-aggregator
      dockerfile: Dockerfile
    environment:
      - MCP_PORT=3100
      - MCP_SERVERS=homeassistant:http://mcp-homeassistant:3001/mcp,ynab:http://mcp-ynab:3002/mcp,notion:http://mcp-notion:3003/mcp,fetch:http://mcp-fetch:3004/mcp,search:http://mcp-search:3005/mcp,calculator:http://mcp-calculator:3006/mcp,memory:http://mcp-memory:3007/mcp
    ports:
      - "3100:3100"
    networks:
      - mcp-network

  # MCPO (OpenAI tool server wrapper)
  mcpo:
    build:
      context: ./services/mcpo
      dockerfile: Dockerfile
    environment:
      - MCP_ENDPOINT=http://mcp-aggregator:3100
      - PORT=8080
    ports:
      - "8080:8080"
    networks:
      - mcp-network

networks:
  mcp-network:
    driver: bridge

volumes:
  mcp-data:
